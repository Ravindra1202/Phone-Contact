{"version":3,"sources":["component/AddContact.js","component/EditContact.js","component/Home.js","component/Navebar.js","App.js","reportWebVitals.js","redux/reducers/contactReducer.js","index.js"],"names":["AddContact","useState","fname","SetFname","lname","SetLname","phone1","SetPhone1","phone2","SetPhone2","city","SetCity","country","SetCountry","street","SetStreet","contacts","useSelector","state","dispatch","useDispatch","history","useHistory","className","onSubmit","e","preventDefault","window","alert","checkFname","find","contact","console","log","parseInt","data","id","length","type","payload","push","placeholder","value","onChange","target","EditContact","useParams","currentContact","useEffect","to","Home","scope","map","onClick","deleteContact","Navebar","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","action","updateState","filterContacts","filter","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6c90e25.chunk.js","sourcesContent":["import React ,{useState} from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { useDispatch } from 'react-redux';\r\nexport const AddContact = () => {\r\n    const[fname,SetFname] =useState(\"\");\r\n    const[lname,SetLname] =useState(\"\");\r\n    const[phone1,SetPhone1] =useState(\"\");\r\n    const[phone2,SetPhone2] =useState(\"\");\r\n    const[city,SetCity] =useState(\"\");\r\n    const[country,SetCountry] =useState(\"\");\r\n    const[street,SetStreet] =useState(\"\");\r\n\r\n    const contacts =  useSelector((state) => state);\r\n     const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    //console.log(contacts);\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault(); \r\n       \r\n        if(!fname || !lname || !phone1 || !phone2 || !city || !country || !street){\r\n      \r\n            return window.alert(\"Fill all details\")\r\n        }\r\n\r\n        const checkFname=contacts.find(contact=>contact.fname===fname && fname);\r\n        console.log(checkFname)\r\n        if(checkFname){\r\n            return(window.alert(\"This name contact is already exist....\"))      \r\n        }\r\n\r\n        const checkPhone1=contacts.find(contact=>contact.phone1=== parseInt(phone1));\r\n        \r\n        if(checkPhone1){\r\n            return(window.alert(\"This  Number is already exist....\"))      \r\n        }\r\n   \r\n\r\n    const data ={\r\n        id:contacts[contacts.length-1].id + 1,\r\n        fname,\r\n        lname,\r\n        phone1,\r\n        phone2,\r\n        country,\r\n        city,\r\n        street,\r\n    }\r\n   console.log(\"data is \",data)\r\n    dispatch({type:\"ADD_CONTACT\",payload:data})\r\n    //toast.success(\"contact aadded succfully\");\r\n   window.alert(\"addedd\")\r\n  history.push(\"/\");\r\n};\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <h1 className=\"  my-5 text-center\">\r\n                    Add Contact\r\n                </h1>\r\n                <div className=\"col-md-6 shadow mx-auto p-5\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" placeholder=\"Enter First Name\" className=\"form-control\"\r\n                            value={fname} onChange={e=>SetFname(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" placeholder=\"Enter Last Name\" className=\"form-control\"\r\n                             value={lname} onChange={e=>SetLname(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"number\" placeholder=\"Office Phone number\" className=\"form-control\"\r\n                             value={phone1} onChange={e=>SetPhone1(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"number\" placeholder=\"Residential Phone number\" className=\"form-control\"\r\n                             value={phone2} onChange={e=>SetPhone2(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" placeholder=\"Enter City\" className=\"form-control\"\r\n                            value={city} onChange={e=>SetCity(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" placeholder=\"Enter  Country\" className=\"form-control\"\r\n                            value={country} onChange={e=>SetCountry(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" placeholder=\"Street Address\" className=\"form-control\"\r\n                            value={street} onChange={e=>SetStreet(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"from-group\">\r\n                            <input type=\"submit\" value=\"add contact\" className=\"btn btn-block btn-dark\"/>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link, useParams, useHistory } from 'react-router-dom';\r\nimport { useState,useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nexport const EditContact = () => {\r\n    \r\n    const[fname,SetFname] =useState(\"\");\r\n    const[lname,SetLname] =useState(\"\");\r\n    const[phone1,SetPhone1] =useState(\"\");\r\n    const[phone2,SetPhone2] =useState(\"\");\r\n    const[city,SetCity] =useState(\"\");\r\n    const[country,SetCountry] =useState(\"\");\r\n    const[street,SetStreet] =useState(\"\");\r\n    const contacts =useSelector(state=>state);\r\n    const {id}=useParams();\r\n    const dispatch= useDispatch();\r\n    const history=useHistory();\r\n    const currentContact =contacts.find(contact=>contact.id==parseInt(id));\r\n\r\n    useEffect(() => {\r\n \r\n    if(currentContact){\r\n        SetFname(currentContact.fname);\r\n        SetLname(currentContact.lname)\r\n        SetPhone1(currentContact.phone1)\r\n        SetPhone2(currentContact.phone2)\r\n        SetCountry(currentContact.country)\r\n        SetCity(currentContact.city)\r\n        SetStreet(currentContact.street)\r\n    }\r\n \r\n    }, [currentContact])\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault(); \r\n       \r\n        if(!fname || !lname || !phone1 || !phone2 || !city || !country || !street){\r\n      \r\n            return window.alert(\"Fill all details\")\r\n        }\r\n\r\n        const checkFname=contacts.find(\r\n           ( contact)=>contact.id !==parseInt(id) && contact.fname===fname && fname);\r\n        \r\n        if(checkFname){\r\n            return(window.alert(\"This name contact is already exist....\"))      \r\n        }\r\n\r\n        const checkPhone1=contacts.find(\r\n            (contact)=>contact.id !==parseInt(id) && contact.phone1=== parseInt(phone1));\r\n        \r\n        if(checkPhone1){\r\n            return(window.alert(\"This  Number is already exist....\"))      \r\n        }\r\n   \r\n\r\n    const data ={\r\n        id: parseInt(id),\r\n        fname,\r\n        lname,\r\n        phone1,\r\n        phone2,\r\n        country,\r\n        city,\r\n        street,\r\n    }\r\n   console.log(\"data is \",data)\r\n    dispatch({type:\"UPDATE_CONTACT\",payload:data})\r\n    //toast.success(\"contact aadded succfully\");\r\n   window.alert(\"Updated Successfully......\")\r\n  history.push(\"/\");\r\n};\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {currentContact ? (\r\n                <>\r\n                <div className=\"row\">\r\n                <h1 className=\"display-3 my-5 text-center\">\r\n                    Update Details {id}\r\n                </h1>\r\n                <div className=\"col-md-6 shadow mx-auto p-5\">\r\n                    <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                            <input type=\"text\" placeholder=\"Enter First Name\" className=\"form-control\"\r\n                             value={fname} onChange={e=>SetFname(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" placeholder=\"Enter Last Name\" className=\"form-control\"\r\n                             value={lname} onChange={e=>SetLname(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"number\" placeholder=\"Office Phone number\" className=\"form-control\"\r\n                             value={phone1} onChange={e=>SetPhone1(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"number\" placeholder=\"Residential Phone number\" className=\"form-control\"\r\n                             value={phone2} onChange={e=>SetPhone2(e.target.value)}/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" placeholder=\"Enter City\" className=\"form-control\"\r\n                             value={city} onChange={e=>SetCity(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" placeholder=\"Enter  Country\" className=\"form-control\"\r\n                             value={country} onChange={e=>SetCountry(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" placeholder=\"Street Address\" className=\"form-control\"\r\n                             value={street} onChange={e=>SetStreet(e.target.value)}/>\r\n                        </div>\r\n                        <div className=\"from-group\">\r\n                            <input type=\"submit\" value=\"update contact\" className=\"btn  btn-dark\"/>\r\n                           <Link to=\"/\" className=\"btn btn-danger ml-3\">Cancle</Link>\r\n                           </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n                </>\r\n            ) : (\r\n                <h1 className=\" my-5 text-center\">contact with id {id} is not exist</h1>\r\n            )}\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nexport const Home = () => {\r\n    const contacts = useSelector(state=>state);\r\n    const dispatch = useDispatch();\r\n    const deleteContact =(id)=>{\r\n        dispatch({type:\"DELETE_CONTACT\", payload:id});\r\n        window.alert(\"Contact deleted Successfully......\")\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-20 my-5 text-right\">\r\n                    <Link to=\"/add\" className=\"btn btn-outline-dark\">Add Contact</Link>\r\n                </div>\r\n                <div className=\"col-md-10 mx-auto\">\r\n                     <table className=\"table table-hover\">\r\n                         <thead className=\"text-white bg-dark text-center\">\r\n                         <tr>\r\n                             <th scope=\"col\">ID</th>\r\n                             <th scope=\"col\">F-Name</th>\r\n                             <th scope=\"col\">L-Name</th>\r\n                             <th scope=\"col\">Phone1</th>\r\n                             <th scope=\"col\">Phone2</th>\r\n                             <th scope=\"col\">Country</th>\r\n                             <th scope=\"col\">City</th>\r\n                             <th scope=\"col\">Street</th>\r\n                             <th scope=\"col\">Action</th>\r\n                         </tr>\r\n                         </thead>\r\n                         <tbody>\r\n                             {\r\n                                 contacts.map((contact,id)=> (\r\n                                     <tr key={id}>\r\n                                         <td>{id+1}</td>\r\n                                         <td>{contact.fname}</td>\r\n                                         <td>{contact.lname}</td>\r\n                                         <td>{contact.phone1}</td>\r\n                                         <td>{contact.phone2}</td>\r\n                                         <td>{contact.country}</td>\r\n                                         <td>{contact.city}</td>\r\n                                         <td>{contact.street}</td>\r\n                                         <td>\r\n                                             <Link to={`/edit/${contact.id} `} className=\"btn btn-primary btn-small mr-2\">Edit</Link>\r\n                                             <button className=\"btn btn-danger btn-small mr-2\" onClick={()=>deleteContact(contact.id)}>Delete</button>\r\n                                         </td>\r\n                                     </tr>\r\n                                 ))\r\n                             }\r\n                         </tbody>\r\n                     </table>\r\n               </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nexport const Navebar = () => {\r\n    return (\r\n        <div className=\"col-md-12 bg-dark py-2\">\r\n      <nav className=\"navbar bg-dark navbar-dark\">\r\n        <Link to={\"/\"} className=\"navbar-brand ml-5\">\r\n           Phone Contact Dictonary\r\n        </Link>\r\n      </nav>\r\n    </div>\r\n    )\r\n}\r\n"," import { Route } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport './App.css';\nimport { AddContact } from './component/AddContact';\nimport { EditContact } from './component/EditContact';\nimport { Home } from './component/Home';\nimport { Navebar } from './component/Navebar';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ToastContainer />\n      <Navebar/>\n      <Route exact path=\"/\" component={() => <Home />} />\n      <Route exact path=\"/add\">\n         <AddContact/>\n      </Route>\n\n      <Route exact path=\"/edit/:id\" > \n      <EditContact/>\n      </Route>\n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState =[\r\n    {\r\n        id:0,\r\n        fname:\"Ravindra\",\r\n        lname:'patel',\r\n        phone1 :1234568,\r\n        phone2:357899982,\r\n        city:\"varanasi\",\r\n        country:'India',\r\n        street:'Dandupur'\r\n\r\n    },\r\n    {\r\n        id:1,\r\n        fname:\"Ravi\",\r\n        lname:'patel',\r\n        phone1 :9787564,\r\n        phone2:6546238,\r\n        city:\"Lucknow\",\r\n        country:'India',\r\n        street:'Munsipuliya'\r\n\r\n    }\r\n]\r\nexport const contactReducer =(state=initialState,action)=>{\r\n    switch(action.type){\r\n        case \"ADD_CONTACT\":\r\n            state = [...state, action.payload];\r\n            return state;\r\n\r\n        case \"UPDATE_CONTACT\":\r\n            const updateState =state.map(contact=>contact.id===action.payload.id ? action.payload:contact);\r\n            state=updateState;\r\n            return state;\r\n\r\n        case \"DELETE_CONTACT\":\r\n            const filterContacts=state.filter(contact=>contact.id !==action.payload  ? contact:null);\r\n            state =filterContacts;\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter } from 'react-router-dom';\n// import \"react-toastify/dist/ReactTostify.css\";\nimport {createStore } from \"redux\";\nimport { contactReducer } from './redux/reducers/contactReducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { Provider } from 'react-redux';\n\nconst store =createStore(contactReducer,composeWithDevTools())\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store ={store}>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}